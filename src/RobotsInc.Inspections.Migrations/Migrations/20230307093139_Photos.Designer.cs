// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RobotsInc.Inspections.Repositories;

#nullable disable

namespace RobotsInc.Inspections.Repositories.Migrations
{
    [DbContext(typeof(InspectionsDbContext))]
    [Migration("20230307093139_Photos")]
    partial class Photos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RobotsInc.Inspections.Models.Customer", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Inspection", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"), 1L, 1);

                    b.Property<DateTime?>("Date")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<long>("RobotId")
                        .HasColumnType("bigint");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Summary")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("RobotId");

                    b.ToTable("Inspections");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Note", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Importance")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<long>("InspectionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("InspectionId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Photo", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"), 1L, 1);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("NoteId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("NoteId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Robot", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"), 1L, 1);

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("ManufacturingDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Robots");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Robot");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Security.Claim", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Security.User", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.ArticulatedRobot", b =>
                {
                    b.HasBaseType("RobotsInc.Inspections.Models.Robot");

                    b.Property<int?>("NrOfJoints")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("ArticulatedRobot");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.AutomatedGuidedVehicle", b =>
                {
                    b.HasBaseType("RobotsInc.Inspections.Models.Robot");

                    b.Property<string>("ChargingType")
                        .IsRequired()
                        .HasMaxLength(22)
                        .HasColumnType("nvarchar(22)");

                    b.Property<string>("NavigationType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasDiscriminator().HasValue("AutomatedGuidedVehicle");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Inspection", b =>
                {
                    b.HasOne("RobotsInc.Inspections.Models.Robot", "Robot")
                        .WithMany("Inspections")
                        .HasForeignKey("RobotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Robot");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Note", b =>
                {
                    b.HasOne("RobotsInc.Inspections.Models.Inspection", "Inspection")
                        .WithMany("Notes")
                        .HasForeignKey("InspectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inspection");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Photo", b =>
                {
                    b.HasOne("RobotsInc.Inspections.Models.Note", "Note")
                        .WithMany("Photos")
                        .HasForeignKey("NoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Note");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Robot", b =>
                {
                    b.HasOne("RobotsInc.Inspections.Models.Customer", "Customer")
                        .WithMany("Robots")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Security.Claim", b =>
                {
                    b.HasOne("RobotsInc.Inspections.Models.Security.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Customer", b =>
                {
                    b.Navigation("Robots");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Inspection", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Note", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Robot", b =>
                {
                    b.Navigation("Inspections");
                });

            modelBuilder.Entity("RobotsInc.Inspections.Models.Security.User", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
